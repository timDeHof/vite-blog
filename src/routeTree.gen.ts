/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as AboutImport } from './routes/about'
import { Route as TagsIndexImport } from './routes/tags/index'
import { Route as BlogIndexImport } from './routes/blog/index'
import { Route as TagsTagImport } from './routes/tags/$tag'
import { Route as BlogSlugImport } from './routes/blog/$slug'

// Create Virtual Routes

const IndexLazyImport = createFileRoute('/')()

// Create/Update Routes

const AboutRoute = AboutImport.update({
  id: '/about',
  path: '/about',
  getParentRoute: () => rootRoute,
} as any)

const IndexLazyRoute = IndexLazyImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/index.lazy').then((d) => d.Route))

const TagsIndexRoute = TagsIndexImport.update({
  id: '/tags/',
  path: '/tags/',
  getParentRoute: () => rootRoute,
} as any)

const BlogIndexRoute = BlogIndexImport.update({
  id: '/blog/',
  path: '/blog/',
  getParentRoute: () => rootRoute,
} as any)

const TagsTagRoute = TagsTagImport.update({
  id: '/tags/$tag',
  path: '/tags/$tag',
  getParentRoute: () => rootRoute,
} as any)

const BlogSlugRoute = BlogSlugImport.update({
  id: '/blog/$slug',
  path: '/blog/$slug',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/about': {
      id: '/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AboutImport
      parentRoute: typeof rootRoute
    }
    '/blog/$slug': {
      id: '/blog/$slug'
      path: '/blog/$slug'
      fullPath: '/blog/$slug'
      preLoaderRoute: typeof BlogSlugImport
      parentRoute: typeof rootRoute
    }
    '/tags/$tag': {
      id: '/tags/$tag'
      path: '/tags/$tag'
      fullPath: '/tags/$tag'
      preLoaderRoute: typeof TagsTagImport
      parentRoute: typeof rootRoute
    }
    '/blog/': {
      id: '/blog/'
      path: '/blog'
      fullPath: '/blog'
      preLoaderRoute: typeof BlogIndexImport
      parentRoute: typeof rootRoute
    }
    '/tags/': {
      id: '/tags/'
      path: '/tags'
      fullPath: '/tags'
      preLoaderRoute: typeof TagsIndexImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexLazyRoute
  '/about': typeof AboutRoute
  '/blog/$slug': typeof BlogSlugRoute
  '/tags/$tag': typeof TagsTagRoute
  '/blog': typeof BlogIndexRoute
  '/tags': typeof TagsIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexLazyRoute
  '/about': typeof AboutRoute
  '/blog/$slug': typeof BlogSlugRoute
  '/tags/$tag': typeof TagsTagRoute
  '/blog': typeof BlogIndexRoute
  '/tags': typeof TagsIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexLazyRoute
  '/about': typeof AboutRoute
  '/blog/$slug': typeof BlogSlugRoute
  '/tags/$tag': typeof TagsTagRoute
  '/blog/': typeof BlogIndexRoute
  '/tags/': typeof TagsIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/about' | '/blog/$slug' | '/tags/$tag' | '/blog' | '/tags'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/about' | '/blog/$slug' | '/tags/$tag' | '/blog' | '/tags'
  id:
    | '__root__'
    | '/'
    | '/about'
    | '/blog/$slug'
    | '/tags/$tag'
    | '/blog/'
    | '/tags/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexLazyRoute: typeof IndexLazyRoute
  AboutRoute: typeof AboutRoute
  BlogSlugRoute: typeof BlogSlugRoute
  TagsTagRoute: typeof TagsTagRoute
  BlogIndexRoute: typeof BlogIndexRoute
  TagsIndexRoute: typeof TagsIndexRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexLazyRoute: IndexLazyRoute,
  AboutRoute: AboutRoute,
  BlogSlugRoute: BlogSlugRoute,
  TagsTagRoute: TagsTagRoute,
  BlogIndexRoute: BlogIndexRoute,
  TagsIndexRoute: TagsIndexRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/about",
        "/blog/$slug",
        "/tags/$tag",
        "/blog/",
        "/tags/"
      ]
    },
    "/": {
      "filePath": "index.lazy.tsx"
    },
    "/about": {
      "filePath": "about.tsx"
    },
    "/blog/$slug": {
      "filePath": "blog/$slug.tsx"
    },
    "/tags/$tag": {
      "filePath": "tags/$tag.tsx"
    },
    "/blog/": {
      "filePath": "blog/index.tsx"
    },
    "/tags/": {
      "filePath": "tags/index.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
